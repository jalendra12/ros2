Start ROS 2
 - You will need to run this command on every new shell you open to have access to the ROS 2 commands
 source /opt/ros/humble/setup.bash

rqt is a graphical user interface (GUI) tool for ROS 2.


NODE
To run turtlesim, open a new terminal, and enter the following command:

 * ros2 run turtlesim turtlesim_node
 * ros2 run turtlesim turtle_teleop_key
 * ros2 node list

Here, the package name is turtlesim and the executable name is turtlesim_node.

REMAPPING is the process of changing the name of a topic, service, parameter, or node interface at runtime — without modifying the source code of the node.
 * ros2 run turtlesim turtlesim_node --ros-args --remap __node:=my_turtle

 -- Terminate any node
    ps aux | grep <node_name>
    kill <PID>

    svaya      27287  ...  /usr/bin/python3 /opt/ros/humble/bin/ros2 run ...
    svaya      27288  ...  /opt/ros/humble/lib/turtlesim/turtlesim_node ... this line contain main pid
    svaya      27581  ...  grep --color=auto my_turtle



TOPICS
    1. ROS 2 breaks complex systems down into many modular nodes. Topics are a vital element of the ROS graph that act as a bus for nodes to exchange messages.
    2. A node may publish data to any number of topics and simultaneously have subscriptions to any number of topics.
    3. Topics are one of the main ways in which data is moved between nodes and therefore between different parts of the system.

  * ros2 topic list
    /parameter_events
    /rosout
    /turtle1/cmd_vel
    /turtle1/color_sensor
    /turtle1/pose

  * ros2 topic list -t
    will return the same list of topics, this time with the topic type appended in brackets.
    output:
    /parameter_events [rcl_interfaces/msg/ParameterEvent]
    /rosout [rcl_interfaces/msg/Log]
    /turtle1/cmd_vel [geometry_msgs/msg/Twist]
    /turtle1/color_sensor [turtlesim/msg/Color]
    /turtle1/pose [turtlesim/msg/Pose]

  To see the data being published on a topic, use:
  * ros2 topic echo /turtle1/cmd_vel

  Topics don’t have to only be one-to-one communication; they can be one-to-many, many-to-one, or many-to-many.
  * ros2 topic info /turtle1/cmd_vel
    Type: geometry_msgs/msg/Twist
    Publisher count: 1
    Subscription count: 2
  * ros2 interface show geometry_msgs/msg/Twist

SERVICE
  





Building Packages
 * colcon build --packages-select my_package
   to run selected packages





cmake_minimum_required(VERSION 3.8)
project(client)

find_package(ament_cmake REQUIRED)
find_package(rosidl_default_generators REQUIRED)
find_package(rclcpp REQUIRED)

set(msg_files
  "srv/AddThreeInts.srv"
)

rosidl_generate_interfaces(${PROJECT_NAME}
  ${msg_files}
)

ament_export_dependencies(rosidl_default_runtime)

add_executable(add_three_ints_client src/add_three_ints_client.cpp)
ament_target_dependencies(add_three_ints_client rclcpp)


install(TARGETS
    add_three_ints_client
  DESTINATION lib/${PROJECT_NAME})

rosidl_get_typesupport_target(cpp_typesupport_target
  ${PROJECT_NAME} rosidl_typesupport_cpp)

target_link_libraries(add_three_ints_client "${cpp_typesupport_target}")

ament_package()



<?xml version="1.0"?>
<?xml-model href="http://download.ros.org/schema/package_format3.xsd" schematypens="http://www.w3.org/2001/XMLSchema"?>
<package format="3">
  <name>client</name>
  <version>0.0.0</version>
  <description>TODO: Package description</description>
  <maintainer email="jalendragouda777@gmail.com">jalendra123</maintainer>
  <license>Apache-2.0</license>

  <buildtool_depend>ament_cmake</buildtool_depend>

  <test_depend>ament_lint_auto</test_depend>
  <test_depend>ament_lint_common</test_depend>
  <buildtool_depend>rosidl_default_generators</buildtool_depend>
  <exec_depend>rosidl_default_runtime</exec_depend>
  <member_of_group>rosidl_interface_packages</member_of_group>
  <export>
    <build_type>ament_cmake</build_type>
  </export>
</package>

